"use strict";(self.webpackChunkwebsite_new=self.webpackChunkwebsite_new||[]).push([[252],{6303:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Getting started","items":[{"type":"link","label":"Introduction","href":"/confluent-schema-registry/docs/introduction","docId":"introduction","unlisted":false},{"type":"link","label":"Usage","href":"/confluent-schema-registry/docs/usage","docId":"usage","unlisted":false},{"type":"link","label":"Advanced Usage","href":"/confluent-schema-registry/docs/advanced-usage","docId":"advanced-usage","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"How-to","items":[{"type":"link","label":"Custom Types","href":"/confluent-schema-registry/docs/custom-types","docId":"custom-types","unlisted":false},{"type":"link","label":"Usage with KafkaJS","href":"/confluent-schema-registry/docs/usage-with-kafkajs","docId":"usage-with-kafkajs","unlisted":false},{"type":"link","label":"Example Avro Schemas","href":"/confluent-schema-registry/docs/schemas","docId":"schemas","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Migration guides","items":[{"type":"link","label":"Migrating to version 2","href":"/confluent-schema-registry/docs/v2","docId":"v2","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Contributing","items":[{"type":"link","label":"Development","href":"/confluent-schema-registry/docs/development","docId":"development","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"advanced-usage":{"id":"advanced-usage","title":"Advanced Usage","description":"While typical usage is covered in Usage, Confluent Schema Registry also","sidebar":"docs"},"custom-types":{"id":"custom-types","title":"Configuring Custom Types","description":"Schemas can contain types that cannot be represented by Javascript primitive types, or","sidebar":"docs"},"development":{"id":"development","title":"Development","description":"To run the registry locally:","sidebar":"docs"},"introduction":{"id":"introduction","title":"Introduction","description":"confluent-schema-registry is a library that makes it easier to interact with the Confluent schema registry, it provides convenient methods to encode, decode and register new schemas using the Apache Avro, JSON Schema and Protobuf serialization formats and Confluent\'s wire format.","sidebar":"docs"},"schema-avro":{"id":"schema-avro","title":"Example Avro Schemas","description":"Schema with references to other schemas"},"schema-json":{"id":"schema-json","title":"Example JSON Schemas","description":"Schema with references to other schemas"},"schema-protobuf":{"id":"schema-protobuf","title":"Example Protobuf Schemas","description":"Schema with references to other schemas"},"schemas":{"id":"schemas","title":"Example Avro Schemas","description":"Unions with null","sidebar":"docs"},"usage":{"id":"usage","title":"Usage","description":"Typical usage consists of uploading one or more schemas to the registry, [encoding","sidebar":"docs"},"usage-with-kafkajs":{"id":"usage-with-kafkajs","title":"Usage with KafkaJS","description":"Although Confluent Schema Registry can be used with any Kafka client, or outside","sidebar":"docs"},"v2":{"id":"v2","title":"Migrating from v1 to v2","description":"In version 1, @kafkajs/confluent-schema-registry only supported Avro schemas and","sidebar":"docs"}}}}')}}]);