trigger:
  tags:
    include:
      - 'v*'

  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

variables:
  - group: secrets
  - name: COMPOSE_FILE
    value: docker-compose.yml

jobs:
  - job: lint
    displayName: Lint
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - bash: yarn install
        displayName: yarn install
      - bash: yarn lint
        displayName: yarn lint

  - job: build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - bash: yarn install
        displayName: yarn install
      - bash: yarn build
        displayName: yarn build

  - job: unit_tests
    displayName: Tests
    dependsOn: lint
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - bash: yarn install
        displayName: yarn install
      - bash: docker-compose -f ${COMPOSE_FILE} pull
        displayName: docker-compose pull
      - bash: yarn test
        displayName: integration test with dockest

  - job: npm_release
    displayName: 'NPM release'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/'))
    dependsOn:
      - lint
      - build
      - unit_tests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - bash: yarn install
        displayName: yarn install
      - bash: yarn prepare:release
        displayName: yarn prepare:release
      - task: Npm@1
        inputs:
          command: custom
          customCommand: publish release/ --access public
          customEndpoint: npm_registry
          publishEndpoint: npm_registry
      - bash: TOKEN=${GH_TOKEN} TAG=$(Build.SourceBranch) ./pipeline/updateGithubRelease.js
        displayName: github release
        env:
          GH_TOKEN: $(GH_TOKEN)

  - job: website_deploy
    displayName: 'Website'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn:
      - lint
      - unit_tests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
      - bash: git config core.autocrlf true || test true
        displayName: git config core.autocrlf
      - bash: git config --global user.name "${GH_NAME}" || test true
        displayName: git config username
        env:
          GH_NAME: $(GH_NAME)
      - bash: git config --global user.email "${GH_EMAIL}" || test true
        displayName: git config email
        env:
          GH_EMAIL: $(GH_EMAIL)
      - bash: echo "machine github.com login ${GH_NAME} password ${GH_TOKEN}" > ~/.netrc || test true
        displayName: git config machine
        env:
          GH_NAME: $(GH_NAME)
          GH_TOKEN: $(GH_TOKEN)
      - bash: cd website && yarn install && GIT_USER="${GH_NAME}" yarn run publish-gh-pages || test true
        displayName: publish to gh-pages
        env:
          GH_NAME: $(GH_NAME)
